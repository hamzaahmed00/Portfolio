{"version":3,"sources":["pages/FunDemo.js","assets/image.jpg","assets/react.jpg","assets/js.jpg","assets/java.jpg","assets/html.jpg","assets/fa.jpeg","assets/fchat.jpeg","assets/ff.jpeg","assets/fl.jpeg","assets/fo.jpeg","assets/fr.jpeg","assets/frv.jpeg","assets/fs.jpeg","assets/fw.jpeg","assets/ft.jpeg","assets/s1.jpeg","assets/s2.jpeg","assets/s3.jpeg","assets/s4.jpeg","assets/s5.jpeg","assets/s6.jpeg","assets/sw.jpeg","assets/st.jpeg","assets/ta.jpeg","assets/ta1.jpeg","assets/tc.jpeg","assets/tqr.jpeg","assets/tr.jpeg","assets/trs.jpeg","assets/tt.jpeg","assets/cover.png","assets/div2imgJuan.jpg","pages/Landing.js","App.js","reportWebVitals.js","index.js"],"names":["trans","x","y","FunDemo","useSpring","xy","config","mass","tension","friction","props","set","class","onMouseMove","e","clientX","window","innerWidth","clientY","innerHeight","div","style","transform","interpolate","Landing","a","axios","get","then","response","setData","data","console","log","catch","error","images","original","cover","thumbnail","fw","ft","fl","fs","frv","fo","fchat","fa","ff","fr","sw","st","s5","s6","s3","s2","s1","s4","trs","tt","tr","tc","tqr","ta","ta1","useState","fixedText","whenNotFixed","headerText","setHeaderText","useEffect","document","title","fetchData","logo","querySelectorAll","i","length","getTotalLength","header","getElementById","sticky","offsetTop","scrollCallBack","addEventListener","pageYOffset","classList","add","remove","removeEventListener","id","className","display","flexDirection","flex","justifyContent","alignItems","fontSize","color","fontWeight","to","type","name","width","height","viewBox","fill","xmlns","maskUnits","d","stroke","stroke-width","mask","lineHeight","src","firstImage","justifyItems","justifySelf","alignSelf","margin","reactImg","js","java","html","map","backgroundColor","padding","textAlign","borderRadius","dish","ingredient","marginBottom","items","href","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.667ebfd5.chunk.js","sourcesContent":["import { useSpring, animated } from \"react-spring\";\r\nimport \"./funDemo.css\";\r\n\r\nconst trans = (x, y) => `translate(${x}px,${y}px) translate(${x}px,${y}px)`;\r\n\r\nfunction FunDemo() {\r\n  const [props, set] = useSpring(() => ({\r\n    xy: [0, 0],\r\n    config: { mass: 10, tension: 200, friction: 100 },\r\n  }));\r\n\r\n  const handleMouseMove = (e) => {\r\n    set({\r\n      xy: [\r\n        (e.clientX * 50) / window.innerWidth,\r\n        (e.clientY * 50) / window.innerHeight,\r\n      ],\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div class=\"container\" onMouseMove={handleMouseMove}>\r\n      <section class=\"box\">\r\n        <animated.div style={{ transform: props.xy.interpolate(trans) }} />\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FunDemo;\r\n","export default __webpack_public_path__ + \"static/media/image.d8a49ef9.jpg\";","export default __webpack_public_path__ + \"static/media/react.b7a22403.jpg\";","export default __webpack_public_path__ + \"static/media/js.76fdc841.jpg\";","export default __webpack_public_path__ + \"static/media/java.82da5913.jpg\";","export default __webpack_public_path__ + \"static/media/html.56737cfe.jpg\";","export default __webpack_public_path__ + \"static/media/fa.9bcf99bc.jpeg\";","export default __webpack_public_path__ + \"static/media/fchat.f9e0615b.jpeg\";","export default __webpack_public_path__ + \"static/media/ff.ae75ad52.jpeg\";","export default __webpack_public_path__ + \"static/media/fl.c5eb4f20.jpeg\";","export default __webpack_public_path__ + \"static/media/fo.56671f33.jpeg\";","export default __webpack_public_path__ + \"static/media/fr.a83a2912.jpeg\";","export default __webpack_public_path__ + \"static/media/frv.00e55db5.jpeg\";","export default __webpack_public_path__ + \"static/media/fs.64955681.jpeg\";","export default __webpack_public_path__ + \"static/media/fw.0a11440c.jpeg\";","export default __webpack_public_path__ + \"static/media/ft.e09559ff.jpeg\";","export default __webpack_public_path__ + \"static/media/s1.2747d1da.jpeg\";","export default __webpack_public_path__ + \"static/media/s2.7ab333b4.jpeg\";","export default __webpack_public_path__ + \"static/media/s3.55ed2919.jpeg\";","export default __webpack_public_path__ + \"static/media/s4.155d50d0.jpeg\";","export default __webpack_public_path__ + \"static/media/s5.80167b3b.jpeg\";","export default __webpack_public_path__ + \"static/media/s6.cb846e25.jpeg\";","export default __webpack_public_path__ + \"static/media/sw.c2593469.jpeg\";","export default __webpack_public_path__ + \"static/media/st.8eec3487.jpeg\";","export default __webpack_public_path__ + \"static/media/ta.9e6ebb4e.jpeg\";","export default __webpack_public_path__ + \"static/media/ta1.7250bee0.jpeg\";","export default __webpack_public_path__ + \"static/media/tc.3bf7247e.jpeg\";","export default __webpack_public_path__ + \"static/media/tqr.5d99e1b5.jpeg\";","export default __webpack_public_path__ + \"static/media/tr.f56038e1.jpeg\";","export default __webpack_public_path__ + \"static/media/trs.f7d9c1ec.jpeg\";","export default __webpack_public_path__ + \"static/media/tt.fca6ba46.jpeg\";","export default __webpack_public_path__ + \"static/media/cover.54d53ce9.png\";","export default __webpack_public_path__ + \"static/media/div2imgJuan.3d7979f9.jpg\";","import React, { useEffect, useState } from \"react\";\r\nimport \"../App.css\";\r\nimport firstImage from \"../assets/image.jpg\";\r\nimport reactImg from \"../assets/react.jpg\";\r\nimport js from \"../assets/js.jpg\";\r\nimport java from \"../assets/java.jpg\";\r\nimport html from \"../assets/html.jpg\";\r\nimport fa from \"../assets/fa.jpeg\";\r\nimport fchat from \"../assets/fchat.jpeg\";\r\nimport ff from \"../assets/ff.jpeg\";\r\nimport fl from \"../assets/fl.jpeg\";\r\nimport fo from \"../assets/fo.jpeg\";\r\nimport fr from \"../assets/fr.jpeg\";\r\nimport frv from \"../assets/frv.jpeg\";\r\nimport fs from \"../assets/fs.jpeg\";\r\nimport fw from \"../assets/fw.jpeg\";\r\nimport ft from \"../assets/ft.jpeg\";\r\nimport s1 from \"../assets/s1.jpeg\";\r\nimport s2 from \"../assets/s2.jpeg\";\r\nimport s3 from \"../assets/s3.jpeg\";\r\nimport s4 from \"../assets/s4.jpeg\";\r\nimport s5 from \"../assets/s5.jpeg\";\r\nimport s6 from \"../assets/s6.jpeg\";\r\nimport sw from \"../assets/sw.jpeg\";\r\nimport st from \"../assets/st.jpeg\";\r\nimport ta from \"../assets/ta.jpeg\";\r\nimport ta1 from \"../assets/ta1.jpeg\";\r\nimport tc from \"../assets/tc.jpeg\";\r\nimport tqr from \"../assets/tqr.jpeg\";\r\nimport tr from \"../assets/tr.jpeg\";\r\nimport trs from \"../assets/trs.jpeg\";\r\nimport tt from \"../assets/tt.jpeg\";\r\nimport cover from \"../assets/cover.png\";\r\n\r\nimport ImageGallery from \"react-image-gallery\";\r\n\r\nimport secondImage from \"../assets/div2imgJuan.jpg\";\r\nimport SwiperCore, { Navigation, Pagination, Scrollbar, A11y } from \"swiper\";\r\n\r\nimport \"react-image-gallery/styles/css/image-gallery.css\";\r\n\r\nimport axios from \"axios\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\n\r\nfunction Landing(props) {\r\n  async function fetchData() {\r\n    axios\r\n      .get(\"https://random-data-api.com/api/food/random_food?size=15\")\r\n      .then((response) => {\r\n        setData(response.data);\r\n        console.log(response.data);\r\n      })\r\n      .catch((error) => console.error(error));\r\n  }\r\n\r\n  const images = [\r\n    {\r\n      original: cover,\r\n      thumbnail: cover,\r\n    },\r\n    {\r\n      original: fw,\r\n      thumbnail: ft,\r\n    },\r\n    {\r\n      original: fl,\r\n      thumbnail: ft,\r\n    },\r\n    {\r\n      original: fs,\r\n      thumbnail: ft,\r\n    },\r\n    {\r\n      original: frv,\r\n      thumbnail: ft,\r\n    },\r\n    {\r\n      original: fo,\r\n      thumbnail: ft,\r\n    },\r\n    {\r\n      original: fchat,\r\n      thumbnail: ft,\r\n    },\r\n    {\r\n      original: fa,\r\n      thumbnail: ft,\r\n    },\r\n    {\r\n      original: ff,\r\n      thumbnail: ft,\r\n    },\r\n    {\r\n      original: fr,\r\n      thumbnail: ft,\r\n    },\r\n    {\r\n      original: sw,\r\n      thumbnail: st,\r\n    },\r\n    {\r\n      original: s5,\r\n      thumbnail: st,\r\n    },\r\n    {\r\n      original: s6,\r\n      thumbnail: st,\r\n    },\r\n    {\r\n      original: s3,\r\n      thumbnail: st,\r\n    },\r\n    {\r\n      original: s2,\r\n      thumbnail: st,\r\n    },\r\n    {\r\n      original: s1,\r\n      thumbnail: st,\r\n    },\r\n    {\r\n      original: s4,\r\n      thumbnail: st,\r\n    },\r\n    {\r\n      original: trs,\r\n      thumbnail: tt,\r\n    },\r\n    {\r\n      original: tr,\r\n      thumbnail: tt,\r\n    },\r\n    {\r\n      original: tc,\r\n      thumbnail: tt,\r\n    },\r\n    {\r\n      original: tqr,\r\n      thumbnail: tt,\r\n    },\r\n    {\r\n      original: ta,\r\n      thumbnail: tt,\r\n    },\r\n    {\r\n      original: ta1,\r\n      thumbnail: tt,\r\n    },\r\n  ];\r\n  const [data, setData] = useState([]);\r\n  const fixedText = \"I am fixed :)\";\r\n  const whenNotFixed = \"I am not a fixed header :(\";\r\n  const [headerText, setHeaderText] = useState(whenNotFixed);\r\n  useEffect(() => {\r\n    document.title = \"Hamza Ahmed\";\r\n    fetchData();\r\n    const logo = document.querySelectorAll(\"#logo path\");\r\n    for (let i = 0; i < logo.length; i++) {\r\n      console.log(`Letter ${i} is ${logo[i].getTotalLength()}`);\r\n    }\r\n    const header = document.getElementById(\"myHeader\");\r\n    const box = document.getElementById(\"firstDivision\");\r\n    const sticky = header.offsetTop;\r\n    const scrollCallBack = window.addEventListener(\"scroll\", () => {\r\n      if (window.pageYOffset > sticky + 350) {\r\n        header.classList.add(\"sticky\");\r\n        if (headerText !== fixedText) {\r\n          setHeaderText(fixedText);\r\n        }\r\n      } else {\r\n        header.classList.remove(\"sticky\");\r\n        if (headerText !== whenNotFixed) {\r\n          setHeaderText(whenNotFixed);\r\n        }\r\n      }\r\n    });\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", scrollCallBack);\r\n    };\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <header id=\"myHeader\" className=\"header\">\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            flex: 1,\r\n            justifyContent: \"space-around\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <h3 className=\"headerLogo\">Hamza Ahmed</h3>\r\n          <p\r\n            className=\"headerText\"\r\n            style={{ fontSize: 21, color: \"black\", fontWeight: \"500\" }}\r\n          >\r\n            Software Engineer\r\n          </p>\r\n          <div className=\"buttonContainer\">\r\n            <Link to=\"/FunDemo\">\r\n              <button type=\"button\" name=\"Register\" className=\"RegisterButton\">\r\n                Fun Demo\r\n              </button>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </header>\r\n      <div className=\"logoContainer\">\r\n        <svg\r\n          className=\"myLogo\"\r\n          id=\"logo\"\r\n          width=\"352\"\r\n          height=\"49\"\r\n          viewBox=\"0 0 352 49\"\r\n          fill=\"none\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <mask\r\n            id=\"path-1-outside-1\"\r\n            maskUnits=\"userSpaceOnUse\"\r\n            x=\"0.122009\"\r\n            y=\"0.299988\"\r\n            width=\"352\"\r\n            height=\"49\"\r\n            fill=\"black\"\r\n          >\r\n            <rect\r\n              fill=\"white\"\r\n              x=\"0.122009\"\r\n              y=\"0.299988\"\r\n              width=\"352\"\r\n              height=\"49\"\r\n            />\r\n            <path d=\"M2.12201 38V37.49L3.14201 37.082C3.82201 36.844 4.26401 36.521 4.46801 36.113C4.70601 35.705 4.82501 35.178 4.82501 34.532V7.85899C4.82501 7.17899 4.70601 6.63499 4.46801 6.22699C4.26401 5.81899 3.82201 5.49599 3.14201 5.25799L2.12201 4.84999V4.33999H15.076V4.84999L14.209 5.20699C13.563 5.44499 13.121 5.76799 12.883 6.17599C12.645 6.54999 12.526 7.07699 12.526 7.75699V20.15H24.715V7.75699C24.715 7.07699 24.596 6.54999 24.358 6.17599C24.154 5.76799 23.712 5.44499 23.032 5.20699L22.114 4.84999V4.33999H35.119V4.84999L34.099 5.25799C33.453 5.49599 33.011 5.81899 32.773 6.22699C32.535 6.63499 32.416 7.17899 32.416 7.85899V34.532C32.416 35.178 32.535 35.705 32.773 36.113C33.011 36.521 33.453 36.844 34.099 37.082L35.119 37.49V38H22.114V37.49L23.032 37.184C23.712 36.912 24.154 36.589 24.358 36.215C24.596 35.807 24.715 35.263 24.715 34.583V21.17H12.526V34.583C12.526 35.841 13.087 36.708 14.209 37.184L15.076 37.49V38H2.12201Z\" />\r\n            <path d=\"M43.4017 10.052C42.2457 10.052 41.2597 9.69499 40.4437 8.98099C39.6617 8.23299 39.2707 7.29799 39.2707 6.17599C39.2707 5.01999 39.6617 4.08499 40.4437 3.37099C41.2597 2.65699 42.2457 2.29999 43.4017 2.29999C44.5577 2.29999 45.5267 2.65699 46.3087 3.37099C47.0907 4.08499 47.4817 5.01999 47.4817 6.17599C47.4817 7.29799 47.0907 8.23299 46.3087 8.98099C45.5267 9.69499 44.5577 10.052 43.4017 10.052ZM37.3837 38V37.49L38.0977 37.286C38.7777 37.082 39.2367 36.776 39.4747 36.368C39.7467 35.96 39.8827 35.416 39.8827 34.736V18.773C39.8827 18.059 39.7467 17.532 39.4747 17.192C39.2367 16.818 38.7777 16.563 38.0977 16.427L37.3837 16.274V15.764L46.7167 12.755L47.2267 13.265L47.0737 20.507V34.787C47.0737 35.467 47.1927 36.011 47.4307 36.419C47.7027 36.827 48.1617 37.133 48.8077 37.337L49.3177 37.49V38H37.3837Z\" />\r\n            <path d=\"M54.9927 46.109L54.6867 45.395C55.8427 44.681 56.7097 43.814 57.2877 42.794C57.8997 41.808 58.3247 40.567 58.5627 39.071L56.8797 38.357C55.8937 37.881 55.1287 37.269 54.5847 36.521C54.0747 35.739 53.8197 34.957 53.8197 34.175C53.8197 32.985 54.2107 31.999 54.9927 31.217C55.7747 30.401 56.7947 29.993 58.0527 29.993C59.3447 29.993 60.3817 30.452 61.1637 31.37C61.9797 32.254 62.3877 33.546 62.3877 35.246C62.3877 37.116 61.9967 38.782 61.2147 40.244C60.4667 41.74 59.5317 42.981 58.4097 43.967C57.2877 44.987 56.1487 45.701 54.9927 46.109Z\" />\r\n            <path d=\"M78.0742 38V37.49L79.0942 37.082C79.7742 36.844 80.2162 36.521 80.4202 36.113C80.6582 35.705 80.7772 35.178 80.7772 34.532V7.85899C80.7772 7.17899 80.6582 6.63499 80.4202 6.22699C80.2162 5.81899 79.7742 5.49599 79.0942 5.25799L78.0742 4.84999V4.33999H91.0282V4.84999L90.1612 5.20699C89.5152 5.44499 89.0732 5.76799 88.8352 6.17599C88.5972 6.54999 88.4782 7.07699 88.4782 7.75699V20.15H100.667V7.75699C100.667 7.07699 100.548 6.54999 100.31 6.17599C100.106 5.76799 99.6642 5.44499 98.9842 5.20699L98.0662 4.84999V4.33999H111.071V4.84999L110.051 5.25799C109.405 5.49599 108.963 5.81899 108.725 6.22699C108.487 6.63499 108.368 7.17899 108.368 7.85899V34.532C108.368 35.178 108.487 35.705 108.725 36.113C108.963 36.521 109.405 36.844 110.051 37.082L111.071 37.49V38H98.0662V37.49L98.9842 37.184C99.6642 36.912 100.106 36.589 100.31 36.215C100.548 35.807 100.667 35.263 100.667 34.583V21.17H88.4782V34.583C88.4782 35.841 89.0392 36.708 90.1612 37.184L91.0282 37.49V38H78.0742Z\" />\r\n            <path d=\"M119.684 38.765C117.712 38.765 116.046 38.204 114.686 37.082C113.36 35.96 112.697 34.345 112.697 32.237C112.697 30.639 113.513 29.177 115.145 27.851C116.777 26.491 119.344 25.471 122.846 24.791C123.39 24.689 124.002 24.587 124.682 24.485C125.362 24.349 126.076 24.213 126.824 24.077V20.048C126.824 17.736 126.535 16.121 125.957 15.203C125.413 14.251 124.546 13.775 123.356 13.775C122.54 13.775 121.894 14.047 121.418 14.591C120.942 15.101 120.636 16.002 120.5 17.294L120.398 17.855C120.33 19.317 119.973 20.388 119.327 21.068C118.681 21.748 117.882 22.088 116.93 22.088C116.046 22.088 115.315 21.816 114.737 21.272C114.159 20.728 113.87 19.997 113.87 19.079C113.87 17.685 114.346 16.512 115.298 15.56C116.284 14.608 117.576 13.894 119.174 13.418C120.772 12.942 122.506 12.704 124.376 12.704C127.402 12.704 129.731 13.452 131.363 14.948C133.029 16.41 133.862 18.807 133.862 22.139V33.41C133.862 34.94 134.576 35.705 136.004 35.705H137.126L137.585 36.113C136.939 36.929 136.225 37.558 135.443 38C134.695 38.442 133.624 38.663 132.23 38.663C130.734 38.663 129.544 38.323 128.66 37.643C127.81 36.929 127.249 35.994 126.977 34.838C125.957 35.926 124.903 36.861 123.815 37.643C122.761 38.391 121.384 38.765 119.684 38.765ZM122.795 35.654C123.475 35.654 124.104 35.501 124.682 35.195C125.294 34.855 126.008 34.345 126.824 33.665V25.097C126.484 25.165 126.144 25.233 125.804 25.301C125.464 25.369 125.073 25.437 124.631 25.505C123.067 25.913 121.809 26.61 120.857 27.596C119.939 28.548 119.48 29.84 119.48 31.472C119.48 32.866 119.803 33.92 120.449 34.634C121.095 35.314 121.877 35.654 122.795 35.654Z\" />\r\n            <path d=\"M138.535 38V37.49L139.249 37.286C139.895 37.116 140.337 36.827 140.575 36.419C140.847 36.011 141 35.467 141.034 34.787V18.824C141.034 18.076 140.915 17.532 140.677 17.192C140.439 16.818 139.98 16.563 139.3 16.427L138.535 16.223V15.713L147.256 12.755L147.766 13.265L148.174 16.733C149.296 15.611 150.571 14.659 151.999 13.877C153.461 13.095 154.974 12.704 156.538 12.704C158.17 12.704 159.479 13.044 160.465 13.724C161.451 14.37 162.199 15.39 162.709 16.784C164.035 15.526 165.463 14.54 166.993 13.826C168.557 13.078 170.07 12.704 171.532 12.704C173.946 12.704 175.714 13.282 176.836 14.438C177.992 15.594 178.57 17.413 178.57 19.895V34.838C178.57 36.164 179.182 36.997 180.406 37.337L180.967 37.49V38H169.186V37.49L169.696 37.337C170.342 37.133 170.784 36.827 171.022 36.419C171.294 36.011 171.43 35.467 171.43 34.787V19.181C171.43 17.753 171.175 16.784 170.665 16.274C170.155 15.73 169.339 15.458 168.217 15.458C167.333 15.458 166.466 15.662 165.616 16.07C164.8 16.444 163.933 17.022 163.015 17.804C163.185 18.348 163.287 18.943 163.321 19.589C163.389 20.235 163.423 20.915 163.423 21.629V34.838C163.457 36.164 164.069 36.997 165.259 37.337L165.718 37.49V38H153.886V37.49L154.6 37.286C155.246 37.082 155.688 36.793 155.926 36.419C156.198 36.011 156.334 35.467 156.334 34.787V19.232C156.334 17.872 156.079 16.903 155.569 16.325C155.093 15.747 154.26 15.458 153.07 15.458C152.288 15.458 151.506 15.662 150.724 16.07C149.942 16.444 149.126 17.005 148.276 17.753V34.838C148.276 36.164 148.871 36.997 150.061 37.337L150.52 37.49V38H138.535Z\" />\r\n            <path d=\"M183.113 38V37.184L197.036 14.489H189.335C188.451 14.489 187.754 14.727 187.244 15.203C186.734 15.679 186.258 16.308 185.816 17.09L183.98 20.507H183.47L183.827 13.469H204.227V14.183L190.61 36.98H198.617C199.705 36.98 200.504 36.725 201.014 36.215C201.524 35.705 202 35.008 202.442 34.124L204.227 30.35H204.737L204.278 38H183.113Z\" />\r\n            <path d=\"M214.113 38.765C212.141 38.765 210.475 38.204 209.115 37.082C207.789 35.96 207.126 34.345 207.126 32.237C207.126 30.639 207.942 29.177 209.574 27.851C211.206 26.491 213.773 25.471 217.275 24.791C217.819 24.689 218.431 24.587 219.111 24.485C219.791 24.349 220.505 24.213 221.253 24.077V20.048C221.253 17.736 220.964 16.121 220.386 15.203C219.842 14.251 218.975 13.775 217.785 13.775C216.969 13.775 216.323 14.047 215.847 14.591C215.371 15.101 215.065 16.002 214.929 17.294L214.827 17.855C214.759 19.317 214.402 20.388 213.756 21.068C213.11 21.748 212.311 22.088 211.359 22.088C210.475 22.088 209.744 21.816 209.166 21.272C208.588 20.728 208.299 19.997 208.299 19.079C208.299 17.685 208.775 16.512 209.727 15.56C210.713 14.608 212.005 13.894 213.603 13.418C215.201 12.942 216.935 12.704 218.805 12.704C221.831 12.704 224.16 13.452 225.792 14.948C227.458 16.41 228.291 18.807 228.291 22.139V33.41C228.291 34.94 229.005 35.705 230.433 35.705H231.555L232.014 36.113C231.368 36.929 230.654 37.558 229.872 38C229.124 38.442 228.053 38.663 226.659 38.663C225.163 38.663 223.973 38.323 223.089 37.643C222.239 36.929 221.678 35.994 221.406 34.838C220.386 35.926 219.332 36.861 218.244 37.643C217.19 38.391 215.813 38.765 214.113 38.765ZM217.224 35.654C217.904 35.654 218.533 35.501 219.111 35.195C219.723 34.855 220.437 34.345 221.253 33.665V25.097C220.913 25.165 220.573 25.233 220.233 25.301C219.893 25.369 219.502 25.437 219.06 25.505C217.496 25.913 216.238 26.61 215.286 27.596C214.368 28.548 213.909 29.84 213.909 31.472C213.909 32.866 214.232 33.92 214.878 34.634C215.524 35.314 216.306 35.654 217.224 35.654Z\" />\r\n            <path d=\"M244.272 38V37.49L245.292 37.082C245.972 36.844 246.414 36.521 246.618 36.113C246.856 35.705 246.975 35.178 246.975 34.532V7.85899C246.975 7.17899 246.856 6.63499 246.618 6.22699C246.414 5.81899 245.972 5.49599 245.292 5.25799L244.272 4.84999V4.33999H257.226V4.84999L256.359 5.20699C255.713 5.44499 255.271 5.76799 255.033 6.17599C254.795 6.54999 254.676 7.07699 254.676 7.75699V20.15H266.865V7.75699C266.865 7.07699 266.746 6.54999 266.508 6.17599C266.304 5.76799 265.862 5.44499 265.182 5.20699L264.264 4.84999V4.33999H277.269V4.84999L276.249 5.25799C275.603 5.49599 275.161 5.81899 274.923 6.22699C274.685 6.63499 274.566 7.17899 274.566 7.85899V34.532C274.566 35.178 274.685 35.705 274.923 36.113C275.161 36.521 275.603 36.844 276.249 37.082L277.269 37.49V38H264.264V37.49L265.182 37.184C265.862 36.912 266.304 36.589 266.508 36.215C266.746 35.807 266.865 35.263 266.865 34.583V21.17H254.676V34.583C254.676 35.841 255.237 36.708 256.359 37.184L257.226 37.49V38H244.272Z\" />\r\n            <path d=\"M290.888 12.704C293.098 12.704 294.985 13.163 296.549 14.081C298.113 14.965 299.303 16.189 300.119 17.753C300.969 19.283 301.394 21.034 301.394 23.006C301.394 23.38 301.377 23.771 301.343 24.179C301.309 24.553 301.241 24.893 301.139 25.199H285.941C285.975 28.871 286.621 31.523 287.879 33.155C289.171 34.753 291.075 35.552 293.591 35.552C295.291 35.552 296.668 35.28 297.722 34.736C298.776 34.192 299.762 33.393 300.68 32.339L301.19 32.798C300.136 34.668 298.725 36.13 296.957 37.184C295.223 38.238 293.132 38.765 290.684 38.765C288.27 38.765 286.128 38.255 284.258 37.235C282.388 36.181 280.926 34.685 279.872 32.747C278.818 30.809 278.291 28.497 278.291 25.811C278.291 23.023 278.903 20.66 280.127 18.722C281.351 16.75 282.915 15.254 284.819 14.234C286.757 13.214 288.78 12.704 290.888 12.704ZM290.735 13.724C289.749 13.724 288.899 14.03 288.185 14.642C287.505 15.22 286.961 16.274 286.553 17.804C286.179 19.3 285.975 21.425 285.941 24.179H294.662C295.002 20.473 294.866 17.804 294.254 16.172C293.642 14.54 292.469 13.724 290.735 13.724Z\" />\r\n            <path d=\"M303.936 38V37.49L304.701 37.286C305.381 37.082 305.84 36.776 306.078 36.368C306.35 35.96 306.486 35.433 306.486 34.787V18.824C306.486 18.076 306.35 17.532 306.078 17.192C305.84 16.818 305.381 16.563 304.701 16.427L303.936 16.223V15.713L312.708 12.755L313.218 13.265L313.677 17.651V18.059C314.153 17.107 314.765 16.24 315.513 15.458C316.295 14.642 317.145 13.979 318.063 13.469C319.015 12.959 319.95 12.704 320.868 12.704C322.16 12.704 323.146 13.061 323.826 13.775C324.506 14.489 324.846 15.39 324.846 16.478C324.846 17.634 324.506 18.535 323.826 19.181C323.18 19.793 322.398 20.099 321.48 20.099C320.052 20.099 318.794 19.385 317.706 17.957L317.604 17.855C317.264 17.379 316.873 17.124 316.431 17.09C315.989 17.022 315.581 17.226 315.207 17.702C314.867 18.008 314.578 18.382 314.34 18.824C314.136 19.232 313.932 19.708 313.728 20.252V34.481C313.728 35.841 314.323 36.691 315.513 37.031L317.145 37.49V38H303.936Z\" />\r\n            <path d=\"M338.452 12.704C340.662 12.704 342.549 13.163 344.113 14.081C345.677 14.965 346.867 16.189 347.683 17.753C348.533 19.283 348.958 21.034 348.958 23.006C348.958 23.38 348.941 23.771 348.907 24.179C348.873 24.553 348.805 24.893 348.703 25.199H333.505C333.539 28.871 334.185 31.523 335.443 33.155C336.735 34.753 338.639 35.552 341.155 35.552C342.855 35.552 344.232 35.28 345.286 34.736C346.34 34.192 347.326 33.393 348.244 32.339L348.754 32.798C347.7 34.668 346.289 36.13 344.521 37.184C342.787 38.238 340.696 38.765 338.248 38.765C335.834 38.765 333.692 38.255 331.822 37.235C329.952 36.181 328.49 34.685 327.436 32.747C326.382 30.809 325.855 28.497 325.855 25.811C325.855 23.023 326.467 20.66 327.691 18.722C328.915 16.75 330.479 15.254 332.383 14.234C334.321 13.214 336.344 12.704 338.452 12.704ZM338.299 13.724C337.313 13.724 336.463 14.03 335.749 14.642C335.069 15.22 334.525 16.274 334.117 17.804C333.743 19.3 333.539 21.425 333.505 24.179H342.226C342.566 20.473 342.43 17.804 341.818 16.172C341.206 14.54 340.033 13.724 338.299 13.724Z\" />\r\n          </mask>\r\n          <path\r\n            d=\"M2.12201 38V37.49L3.14201 37.082C3.82201 36.844 4.26401 36.521 4.46801 36.113C4.70601 35.705 4.82501 35.178 4.82501 34.532V7.85899C4.82501 7.17899 4.70601 6.63499 4.46801 6.22699C4.26401 5.81899 3.82201 5.49599 3.14201 5.25799L2.12201 4.84999V4.33999H15.076V4.84999L14.209 5.20699C13.563 5.44499 13.121 5.76799 12.883 6.17599C12.645 6.54999 12.526 7.07699 12.526 7.75699V20.15H24.715V7.75699C24.715 7.07699 24.596 6.54999 24.358 6.17599C24.154 5.76799 23.712 5.44499 23.032 5.20699L22.114 4.84999V4.33999H35.119V4.84999L34.099 5.25799C33.453 5.49599 33.011 5.81899 32.773 6.22699C32.535 6.63499 32.416 7.17899 32.416 7.85899V34.532C32.416 35.178 32.535 35.705 32.773 36.113C33.011 36.521 33.453 36.844 34.099 37.082L35.119 37.49V38H22.114V37.49L23.032 37.184C23.712 36.912 24.154 36.589 24.358 36.215C24.596 35.807 24.715 35.263 24.715 34.583V21.17H12.526V34.583C12.526 35.841 13.087 36.708 14.209 37.184L15.076 37.49V38H2.12201Z\"\r\n            stroke=\"black\"\r\n            stroke-width=\"4\"\r\n            mask=\"url(#path-1-outside-1)\"\r\n          />\r\n          <path\r\n            d=\"M43.4017 10.052C42.2457 10.052 41.2597 9.69499 40.4437 8.98099C39.6617 8.23299 39.2707 7.29799 39.2707 6.17599C39.2707 5.01999 39.6617 4.08499 40.4437 3.37099C41.2597 2.65699 42.2457 2.29999 43.4017 2.29999C44.5577 2.29999 45.5267 2.65699 46.3087 3.37099C47.0907 4.08499 47.4817 5.01999 47.4817 6.17599C47.4817 7.29799 47.0907 8.23299 46.3087 8.98099C45.5267 9.69499 44.5577 10.052 43.4017 10.052ZM37.3837 38V37.49L38.0977 37.286C38.7777 37.082 39.2367 36.776 39.4747 36.368C39.7467 35.96 39.8827 35.416 39.8827 34.736V18.773C39.8827 18.059 39.7467 17.532 39.4747 17.192C39.2367 16.818 38.7777 16.563 38.0977 16.427L37.3837 16.274V15.764L46.7167 12.755L47.2267 13.265L47.0737 20.507V34.787C47.0737 35.467 47.1927 36.011 47.4307 36.419C47.7027 36.827 48.1617 37.133 48.8077 37.337L49.3177 37.49V38H37.3837Z\"\r\n            stroke=\"black\"\r\n            stroke-width=\"4\"\r\n            mask=\"url(#path-1-outside-1)\"\r\n          />\r\n          <path\r\n            d=\"M54.9927 46.109L54.6867 45.395C55.8427 44.681 56.7097 43.814 57.2877 42.794C57.8997 41.808 58.3247 40.567 58.5627 39.071L56.8797 38.357C55.8937 37.881 55.1287 37.269 54.5847 36.521C54.0747 35.739 53.8197 34.957 53.8197 34.175C53.8197 32.985 54.2107 31.999 54.9927 31.217C55.7747 30.401 56.7947 29.993 58.0527 29.993C59.3447 29.993 60.3817 30.452 61.1637 31.37C61.9797 32.254 62.3877 33.546 62.3877 35.246C62.3877 37.116 61.9967 38.782 61.2147 40.244C60.4667 41.74 59.5317 42.981 58.4097 43.967C57.2877 44.987 56.1487 45.701 54.9927 46.109Z\"\r\n            stroke=\"black\"\r\n            stroke-width=\"4\"\r\n            mask=\"url(#path-1-outside-1)\"\r\n          />\r\n          <path\r\n            d=\"M78.0742 38V37.49L79.0942 37.082C79.7742 36.844 80.2162 36.521 80.4202 36.113C80.6582 35.705 80.7772 35.178 80.7772 34.532V7.85899C80.7772 7.17899 80.6582 6.63499 80.4202 6.22699C80.2162 5.81899 79.7742 5.49599 79.0942 5.25799L78.0742 4.84999V4.33999H91.0282V4.84999L90.1612 5.20699C89.5152 5.44499 89.0732 5.76799 88.8352 6.17599C88.5972 6.54999 88.4782 7.07699 88.4782 7.75699V20.15H100.667V7.75699C100.667 7.07699 100.548 6.54999 100.31 6.17599C100.106 5.76799 99.6642 5.44499 98.9842 5.20699L98.0662 4.84999V4.33999H111.071V4.84999L110.051 5.25799C109.405 5.49599 108.963 5.81899 108.725 6.22699C108.487 6.63499 108.368 7.17899 108.368 7.85899V34.532C108.368 35.178 108.487 35.705 108.725 36.113C108.963 36.521 109.405 36.844 110.051 37.082L111.071 37.49V38H98.0662V37.49L98.9842 37.184C99.6642 36.912 100.106 36.589 100.31 36.215C100.548 35.807 100.667 35.263 100.667 34.583V21.17H88.4782V34.583C88.4782 35.841 89.0392 36.708 90.1612 37.184L91.0282 37.49V38H78.0742Z\"\r\n            stroke=\"black\"\r\n            stroke-width=\"4\"\r\n            mask=\"url(#path-1-outside-1)\"\r\n          />\r\n          <path\r\n            d=\"M119.684 38.765C117.712 38.765 116.046 38.204 114.686 37.082C113.36 35.96 112.697 34.345 112.697 32.237C112.697 30.639 113.513 29.177 115.145 27.851C116.777 26.491 119.344 25.471 122.846 24.791C123.39 24.689 124.002 24.587 124.682 24.485C125.362 24.349 126.076 24.213 126.824 24.077V20.048C126.824 17.736 126.535 16.121 125.957 15.203C125.413 14.251 124.546 13.775 123.356 13.775C122.54 13.775 121.894 14.047 121.418 14.591C120.942 15.101 120.636 16.002 120.5 17.294L120.398 17.855C120.33 19.317 119.973 20.388 119.327 21.068C118.681 21.748 117.882 22.088 116.93 22.088C116.046 22.088 115.315 21.816 114.737 21.272C114.159 20.728 113.87 19.997 113.87 19.079C113.87 17.685 114.346 16.512 115.298 15.56C116.284 14.608 117.576 13.894 119.174 13.418C120.772 12.942 122.506 12.704 124.376 12.704C127.402 12.704 129.731 13.452 131.363 14.948C133.029 16.41 133.862 18.807 133.862 22.139V33.41C133.862 34.94 134.576 35.705 136.004 35.705H137.126L137.585 36.113C136.939 36.929 136.225 37.558 135.443 38C134.695 38.442 133.624 38.663 132.23 38.663C130.734 38.663 129.544 38.323 128.66 37.643C127.81 36.929 127.249 35.994 126.977 34.838C125.957 35.926 124.903 36.861 123.815 37.643C122.761 38.391 121.384 38.765 119.684 38.765ZM122.795 35.654C123.475 35.654 124.104 35.501 124.682 35.195C125.294 34.855 126.008 34.345 126.824 33.665V25.097C126.484 25.165 126.144 25.233 125.804 25.301C125.464 25.369 125.073 25.437 124.631 25.505C123.067 25.913 121.809 26.61 120.857 27.596C119.939 28.548 119.48 29.84 119.48 31.472C119.48 32.866 119.803 33.92 120.449 34.634C121.095 35.314 121.877 35.654 122.795 35.654Z\"\r\n            stroke=\"black\"\r\n            stroke-width=\"4\"\r\n            mask=\"url(#path-1-outside-1)\"\r\n          />\r\n          <path\r\n            d=\"M138.535 38V37.49L139.249 37.286C139.895 37.116 140.337 36.827 140.575 36.419C140.847 36.011 141 35.467 141.034 34.787V18.824C141.034 18.076 140.915 17.532 140.677 17.192C140.439 16.818 139.98 16.563 139.3 16.427L138.535 16.223V15.713L147.256 12.755L147.766 13.265L148.174 16.733C149.296 15.611 150.571 14.659 151.999 13.877C153.461 13.095 154.974 12.704 156.538 12.704C158.17 12.704 159.479 13.044 160.465 13.724C161.451 14.37 162.199 15.39 162.709 16.784C164.035 15.526 165.463 14.54 166.993 13.826C168.557 13.078 170.07 12.704 171.532 12.704C173.946 12.704 175.714 13.282 176.836 14.438C177.992 15.594 178.57 17.413 178.57 19.895V34.838C178.57 36.164 179.182 36.997 180.406 37.337L180.967 37.49V38H169.186V37.49L169.696 37.337C170.342 37.133 170.784 36.827 171.022 36.419C171.294 36.011 171.43 35.467 171.43 34.787V19.181C171.43 17.753 171.175 16.784 170.665 16.274C170.155 15.73 169.339 15.458 168.217 15.458C167.333 15.458 166.466 15.662 165.616 16.07C164.8 16.444 163.933 17.022 163.015 17.804C163.185 18.348 163.287 18.943 163.321 19.589C163.389 20.235 163.423 20.915 163.423 21.629V34.838C163.457 36.164 164.069 36.997 165.259 37.337L165.718 37.49V38H153.886V37.49L154.6 37.286C155.246 37.082 155.688 36.793 155.926 36.419C156.198 36.011 156.334 35.467 156.334 34.787V19.232C156.334 17.872 156.079 16.903 155.569 16.325C155.093 15.747 154.26 15.458 153.07 15.458C152.288 15.458 151.506 15.662 150.724 16.07C149.942 16.444 149.126 17.005 148.276 17.753V34.838C148.276 36.164 148.871 36.997 150.061 37.337L150.52 37.49V38H138.535Z\"\r\n            stroke=\"black\"\r\n            stroke-width=\"4\"\r\n            mask=\"url(#path-1-outside-1)\"\r\n          />\r\n          <path\r\n            d=\"M183.113 38V37.184L197.036 14.489H189.335C188.451 14.489 187.754 14.727 187.244 15.203C186.734 15.679 186.258 16.308 185.816 17.09L183.98 20.507H183.47L183.827 13.469H204.227V14.183L190.61 36.98H198.617C199.705 36.98 200.504 36.725 201.014 36.215C201.524 35.705 202 35.008 202.442 34.124L204.227 30.35H204.737L204.278 38H183.113Z\"\r\n            stroke=\"black\"\r\n            stroke-width=\"4\"\r\n            mask=\"url(#path-1-outside-1)\"\r\n          />\r\n          <path\r\n            d=\"M214.113 38.765C212.141 38.765 210.475 38.204 209.115 37.082C207.789 35.96 207.126 34.345 207.126 32.237C207.126 30.639 207.942 29.177 209.574 27.851C211.206 26.491 213.773 25.471 217.275 24.791C217.819 24.689 218.431 24.587 219.111 24.485C219.791 24.349 220.505 24.213 221.253 24.077V20.048C221.253 17.736 220.964 16.121 220.386 15.203C219.842 14.251 218.975 13.775 217.785 13.775C216.969 13.775 216.323 14.047 215.847 14.591C215.371 15.101 215.065 16.002 214.929 17.294L214.827 17.855C214.759 19.317 214.402 20.388 213.756 21.068C213.11 21.748 212.311 22.088 211.359 22.088C210.475 22.088 209.744 21.816 209.166 21.272C208.588 20.728 208.299 19.997 208.299 19.079C208.299 17.685 208.775 16.512 209.727 15.56C210.713 14.608 212.005 13.894 213.603 13.418C215.201 12.942 216.935 12.704 218.805 12.704C221.831 12.704 224.16 13.452 225.792 14.948C227.458 16.41 228.291 18.807 228.291 22.139V33.41C228.291 34.94 229.005 35.705 230.433 35.705H231.555L232.014 36.113C231.368 36.929 230.654 37.558 229.872 38C229.124 38.442 228.053 38.663 226.659 38.663C225.163 38.663 223.973 38.323 223.089 37.643C222.239 36.929 221.678 35.994 221.406 34.838C220.386 35.926 219.332 36.861 218.244 37.643C217.19 38.391 215.813 38.765 214.113 38.765ZM217.224 35.654C217.904 35.654 218.533 35.501 219.111 35.195C219.723 34.855 220.437 34.345 221.253 33.665V25.097C220.913 25.165 220.573 25.233 220.233 25.301C219.893 25.369 219.502 25.437 219.06 25.505C217.496 25.913 216.238 26.61 215.286 27.596C214.368 28.548 213.909 29.84 213.909 31.472C213.909 32.866 214.232 33.92 214.878 34.634C215.524 35.314 216.306 35.654 217.224 35.654Z\"\r\n            stroke=\"black\"\r\n            stroke-width=\"4\"\r\n            mask=\"url(#path-1-outside-1)\"\r\n          />\r\n          <path\r\n            d=\"M244.272 38V37.49L245.292 37.082C245.972 36.844 246.414 36.521 246.618 36.113C246.856 35.705 246.975 35.178 246.975 34.532V7.85899C246.975 7.17899 246.856 6.63499 246.618 6.22699C246.414 5.81899 245.972 5.49599 245.292 5.25799L244.272 4.84999V4.33999H257.226V4.84999L256.359 5.20699C255.713 5.44499 255.271 5.76799 255.033 6.17599C254.795 6.54999 254.676 7.07699 254.676 7.75699V20.15H266.865V7.75699C266.865 7.07699 266.746 6.54999 266.508 6.17599C266.304 5.76799 265.862 5.44499 265.182 5.20699L264.264 4.84999V4.33999H277.269V4.84999L276.249 5.25799C275.603 5.49599 275.161 5.81899 274.923 6.22699C274.685 6.63499 274.566 7.17899 274.566 7.85899V34.532C274.566 35.178 274.685 35.705 274.923 36.113C275.161 36.521 275.603 36.844 276.249 37.082L277.269 37.49V38H264.264V37.49L265.182 37.184C265.862 36.912 266.304 36.589 266.508 36.215C266.746 35.807 266.865 35.263 266.865 34.583V21.17H254.676V34.583C254.676 35.841 255.237 36.708 256.359 37.184L257.226 37.49V38H244.272Z\"\r\n            stroke=\"black\"\r\n            stroke-width=\"4\"\r\n            mask=\"url(#path-1-outside-1)\"\r\n          />\r\n          <path\r\n            d=\"M290.888 12.704C293.098 12.704 294.985 13.163 296.549 14.081C298.113 14.965 299.303 16.189 300.119 17.753C300.969 19.283 301.394 21.034 301.394 23.006C301.394 23.38 301.377 23.771 301.343 24.179C301.309 24.553 301.241 24.893 301.139 25.199H285.941C285.975 28.871 286.621 31.523 287.879 33.155C289.171 34.753 291.075 35.552 293.591 35.552C295.291 35.552 296.668 35.28 297.722 34.736C298.776 34.192 299.762 33.393 300.68 32.339L301.19 32.798C300.136 34.668 298.725 36.13 296.957 37.184C295.223 38.238 293.132 38.765 290.684 38.765C288.27 38.765 286.128 38.255 284.258 37.235C282.388 36.181 280.926 34.685 279.872 32.747C278.818 30.809 278.291 28.497 278.291 25.811C278.291 23.023 278.903 20.66 280.127 18.722C281.351 16.75 282.915 15.254 284.819 14.234C286.757 13.214 288.78 12.704 290.888 12.704ZM290.735 13.724C289.749 13.724 288.899 14.03 288.185 14.642C287.505 15.22 286.961 16.274 286.553 17.804C286.179 19.3 285.975 21.425 285.941 24.179H294.662C295.002 20.473 294.866 17.804 294.254 16.172C293.642 14.54 292.469 13.724 290.735 13.724Z\"\r\n            stroke=\"black\"\r\n            stroke-width=\"4\"\r\n            mask=\"url(#path-1-outside-1)\"\r\n          />\r\n          <path\r\n            d=\"M303.936 38V37.49L304.701 37.286C305.381 37.082 305.84 36.776 306.078 36.368C306.35 35.96 306.486 35.433 306.486 34.787V18.824C306.486 18.076 306.35 17.532 306.078 17.192C305.84 16.818 305.381 16.563 304.701 16.427L303.936 16.223V15.713L312.708 12.755L313.218 13.265L313.677 17.651V18.059C314.153 17.107 314.765 16.24 315.513 15.458C316.295 14.642 317.145 13.979 318.063 13.469C319.015 12.959 319.95 12.704 320.868 12.704C322.16 12.704 323.146 13.061 323.826 13.775C324.506 14.489 324.846 15.39 324.846 16.478C324.846 17.634 324.506 18.535 323.826 19.181C323.18 19.793 322.398 20.099 321.48 20.099C320.052 20.099 318.794 19.385 317.706 17.957L317.604 17.855C317.264 17.379 316.873 17.124 316.431 17.09C315.989 17.022 315.581 17.226 315.207 17.702C314.867 18.008 314.578 18.382 314.34 18.824C314.136 19.232 313.932 19.708 313.728 20.252V34.481C313.728 35.841 314.323 36.691 315.513 37.031L317.145 37.49V38H303.936Z\"\r\n            stroke=\"black\"\r\n            stroke-width=\"4\"\r\n            mask=\"url(#path-1-outside-1)\"\r\n          />\r\n          <path\r\n            d=\"M338.452 12.704C340.662 12.704 342.549 13.163 344.113 14.081C345.677 14.965 346.867 16.189 347.683 17.753C348.533 19.283 348.958 21.034 348.958 23.006C348.958 23.38 348.941 23.771 348.907 24.179C348.873 24.553 348.805 24.893 348.703 25.199H333.505C333.539 28.871 334.185 31.523 335.443 33.155C336.735 34.753 338.639 35.552 341.155 35.552C342.855 35.552 344.232 35.28 345.286 34.736C346.34 34.192 347.326 33.393 348.244 32.339L348.754 32.798C347.7 34.668 346.289 36.13 344.521 37.184C342.787 38.238 340.696 38.765 338.248 38.765C335.834 38.765 333.692 38.255 331.822 37.235C329.952 36.181 328.49 34.685 327.436 32.747C326.382 30.809 325.855 28.497 325.855 25.811C325.855 23.023 326.467 20.66 327.691 18.722C328.915 16.75 330.479 15.254 332.383 14.234C334.321 13.214 336.344 12.704 338.452 12.704ZM338.299 13.724C337.313 13.724 336.463 14.03 335.749 14.642C335.069 15.22 334.525 16.274 334.117 17.804C333.743 19.3 333.539 21.425 333.505 24.179H342.226C342.566 20.473 342.43 17.804 341.818 16.172C341.206 14.54 340.033 13.724 338.299 13.724Z\"\r\n            stroke=\"black\"\r\n            stroke-width=\"4\"\r\n            mask=\"url(#path-1-outside-1)\"\r\n          />\r\n        </svg>\r\n      </div>\r\n\r\n      <div className=\"firstDiv\">\r\n        <div\r\n          style={{\r\n            flex: 1,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n          }}\r\n          className=\"firstText animated fadeInRight \"\r\n        >\r\n          <h2>Hamza Ahmed</h2>\r\n          <h1\r\n            className=\"headings\"\r\n            style={{\r\n              fontSize: 64,\r\n              fontWeight: \"100\",\r\n              color: \"#333333\",\r\n            }}\r\n          >\r\n            Software\r\n            <br /> Engineer\r\n          </h1>\r\n          <p style={{ fontSize: 20, fontWeight: \"600\", lineHeight: 1.5 }}>\r\n            I am looking to constantly evolve my skills.<br></br> I enjoy\r\n            Learning new stacks and Technologies\r\n          </p>\r\n          <div\r\n            style={{\r\n              flexDirection: \"row\",\r\n            }}\r\n          >\r\n            <Link to=\"/FunDemo\">\r\n              <button type=\"button\" name=\"Register\" className=\"RegisterButton\">\r\n                Fun Demo\r\n              </button>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n        <div\r\n          className=\"fadeIn animated firstPic\"\r\n          style={{\r\n            flex: 2,\r\n            alignItems: \"stretch\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          <img className=\"imageStyle\" src={firstImage}></img>\r\n        </div>\r\n      </div>\r\n\r\n      <div id=\"firstDivision\" className=\"secondDiv\">\r\n        <div\r\n          className=\"secondText\"\r\n          style={{\r\n            flex: 2,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          <h1\r\n            className=\"headings\"\r\n            style={{\r\n              fontSize: 38,\r\n              fontWeight: \"100\",\r\n              color: \"#333333\",\r\n              lineHeight: 1.4,\r\n            }}\r\n          >\r\n            Skills\r\n          </h1>\r\n\r\n          <ul>\r\n            <li>Object Oriented Programming</li>\r\n            <li>Functional Programming</li>\r\n            <li>Designing</li>\r\n            <li>Wireframe (Figma, PSD, Sketch) to Code</li>\r\n            <li>Analytical Reasoning and Problem Solving</li>\r\n            <li>Strong Logic Building</li>\r\n            <li>Strong Communication Skills</li>\r\n          </ul>\r\n          <h1\r\n            className=\"headings\"\r\n            style={{\r\n              fontSize: 38,\r\n              fontWeight: \"100\",\r\n              color: \"#333333\",\r\n              lineHeight: 1.4,\r\n            }}\r\n          >\r\n            Languages, Frameworks\r\n            <br /> and Tools\r\n          </h1>\r\n          <ul>\r\n            <li>React Native</li>\r\n            <li>ReactJS</li>\r\n            <li>Javascript</li>\r\n            <li>Java</li>\r\n            <li>HTML/CSS</li>\r\n            <li>Firebase/Firestore</li>\r\n            <li>C and C#</li>\r\n            <li>Python</li>\r\n            <li>Flutter (In Progress)</li>\r\n          </ul>\r\n        </div>\r\n\r\n        <div\r\n          style={{\r\n            flex: 3,\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            justifyItems: \"center\",\r\n            justifySelf: \"center\",\r\n            alignSelf: \"center\",\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              justifyItems: \"center\",\r\n              justifySelf: \"center\",\r\n              alignSelf: \"center\",\r\n              margin: 20,\r\n            }}\r\n          >\r\n            <div\r\n              className=\"skills animated fadeIn\"\r\n              style={{ display: \"flex\", flex: 1, width: \"100%\" }}\r\n            >\r\n              <img className=\"imageStyle2\" src={reactImg}></img>\r\n            </div>\r\n            <div\r\n              className=\"skills animated fadeIn\"\r\n              style={{ display: \"flex\", flex: 1 }}\r\n            >\r\n              <img className=\"imageStyle2\" src={js}></img>\r\n            </div>\r\n          </div>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              justifyItems: \"center\",\r\n              justifySelf: \"center\",\r\n              alignSelf: \"center\",\r\n              margin: 20,\r\n            }}\r\n          >\r\n            <div\r\n              className=\"skills animated fadeIn\"\r\n              style={{ display: \"flex\", flex: 1 }}\r\n            >\r\n              <img className=\"imageStyle2\" src={java}></img>\r\n            </div>\r\n            <div\r\n              className=\"skills animated fadeIn\"\r\n              style={{ display: \"flex\", flex: 1 }}\r\n            >\r\n              <img className=\"imageStyle2\" src={html}></img>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"thirdDiv\">\r\n        <div\r\n          className=\"secondText\"\r\n          style={{\r\n            flex: 1,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          <h1\r\n            className=\"headings\"\r\n            style={{\r\n              fontSize: 38,\r\n              fontWeight: \"100\",\r\n              color: \"#333333\",\r\n              lineHeight: 1.4,\r\n            }}\r\n          >\r\n            API Call Example <br />\r\n          </h1>\r\n\r\n          <p style={{ fontSize: 17, fontWeight: \"100\", lineHeight: 1.5 }}>\r\n            <strong style={{ fontWeight: \"600\", fontSize: 22 }}>\r\n              Using Axios\r\n            </strong>\r\n            <br />\r\n            Displaying Random food data using axios, refresh and the data will\r\n            randomize\r\n          </p>\r\n        </div>\r\n        <div\r\n          style={{\r\n            flex: 1,\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          <div className=\"products\">\r\n            {data.map((d) => {\r\n              return (\r\n                <div\r\n                  className=\"product\"\r\n                  style={{\r\n                    backgroundColor: \"white\",\r\n                    margin: 25,\r\n                    padding: 25,\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                    textAlign: \"center\",\r\n                    borderRadius: 25,\r\n                  }}\r\n                >\r\n                  <h3>\r\n                    {d.dish} made with {d.ingredient}\r\n                  </h3>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"portfolio\">\r\n        <div\r\n          style={{\r\n            textAlign: \"center\",\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          <h1\r\n            className=\"headings\"\r\n            style={{\r\n              fontSize: 64,\r\n              fontWeight: \"100\",\r\n              color: \"#333333\",\r\n              marginBottom: 20,\r\n            }}\r\n          >\r\n            Portfolio\r\n          </h1>\r\n        </div>\r\n\r\n        <ImageGallery items={images} />\r\n      </div>\r\n      <div className=\"aboutDiv\">\r\n        <div\r\n          style={{\r\n            flex: 1,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n          }}\r\n          className=\"firstText\"\r\n        >\r\n          <h1\r\n            className=\"aboutHeading\"\r\n            style={{\r\n              fontSize: 64,\r\n              fontWeight: \"100\",\r\n              color: \"#333333\",\r\n            }}\r\n          >\r\n            About Me\r\n          </h1>\r\n        </div>\r\n        <div\r\n          className=\"about\"\r\n          style={{\r\n            flex: 2,\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          <p\r\n            style={{\r\n              fontSize: 20,\r\n              fontWeight: \"bold\",\r\n              lineHeight: 2,\r\n              marginBottom: 150,\r\n            }}\r\n          >\r\n            Hi, Here's a bit about me. I am a software Engineer who loves his\r\n            work. I am constantly looking to improve myself by learning new\r\n            skills and improving on the skills I already have. I am a fast\r\n            learner with great adaptibility. I have great communication skills.\r\n            I have strong Fundamentals in programming, so learning new skills,\r\n            tools and technologies is comparitively easy for me.<br></br>\r\n            <br />I also love innovating, finding new solutions to problems is a\r\n            skill I excel at. I have always had a love for technology which lead\r\n            to me choosing a career in Software Engineering. I am also very\r\n            creative so coming up with new Ideas and Design is something I love\r\n            to do.<br></br>\r\n            <br></br>\r\n            Have Questions? Mail me at{\" \"}\r\n            <a className=\"mail\" href=\"mailto:hamzaahmed00@hotmail.com\">\r\n              hamzaahmed00@hotmail.com\r\n            </a>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Landing;\r\n","import { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport FunDemo from \"./pages/FunDemo\";\nimport Landing from \"./pages/Landing\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" component={Landing}></Route>\n        <Route path=\"/FunDemo\" component={FunDemo}></Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}